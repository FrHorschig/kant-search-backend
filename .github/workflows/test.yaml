# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  test:
    runs-on: ubuntu-latest
    environment: actions
    steps:
      - uses: actions/checkout@v4
      - name: set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.20"

      - name: checkout OpenAPI spec
        uses: actions/checkout@v4
        with:
          repository: FrHorschig/kant-search-api
          path: kant-search-api
          token: ${{ secrets.REPO_PAT }}
          sparse-checkout: src/openapi/openapi.yaml
      - name: generate OpenAPI models
        run: |
          docker run --rm \
            -v "${PWD}:/local" \
            openapitools/openapi-generator-cli generate \
            -i /local/kant-search-api/src/openapi/openapi.yaml \
            -o /local/src/kant-search-api-generated \
            -g go-echo-server

      - name: checkout database repo
        uses: actions/checkout@v4
        with:
          repository: FrHorschig/kant-search-database
          path: kant-search-database
          token: ${{ secrets.REPO_PAT }}
      - name: create database container
        run: docker build \
          -f kant-search-database/deployment/Dockerfile \
          -t kant-search-database \
          kant-search-database

      - name: set up python venv
        run: |
          cd src_py
          python -m venv .venv
          source .venv/bin/activate
          pip install -U pip setuptools wheel
          pip install -U spacy
          python -m spacy download de_core_news_sm
          deactivate
          cd ../..

      - name: install dependencies
        working-directory: src
        run: |
          go get .
          go install github.com/golang/mock/mockgen@v1.6.0
      - name: build
        working-directory: src
        run: go build -v ./...

      - name: generate
        working-directory: src
        run: go generate ./...
      - name: test
        working-directory: src
        run: |
          docker logout
          go test -tags=integration,unit ./...
